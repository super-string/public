//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:/download/study\test.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="testParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface ItestVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="testParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInput([NotNull] testParser.InputContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mnemonic_inst</c>
	/// labeled alternative in <see cref="testParser.mnemonic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMnemonic_inst([NotNull] testParser.Mnemonic_instContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mnemonic_instonly</c>
	/// labeled alternative in <see cref="testParser.mnemonic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMnemonic_instonly([NotNull] testParser.Mnemonic_instonlyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mnemonic_comment</c>
	/// labeled alternative in <see cref="testParser.mnemonic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMnemonic_comment([NotNull] testParser.Mnemonic_commentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="testParser.inst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInst([NotNull] testParser.InstContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ope_indirect</c>
	/// labeled alternative in <see cref="testParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpe_indirect([NotNull] testParser.Ope_indirectContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ope_indexref</c>
	/// labeled alternative in <see cref="testParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpe_indexref([NotNull] testParser.Ope_indexrefContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ope_device</c>
	/// labeled alternative in <see cref="testParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpe_device([NotNull] testParser.Ope_deviceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ope_local</c>
	/// labeled alternative in <see cref="testParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpe_local([NotNull] testParser.Ope_localContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ope_tm</c>
	/// labeled alternative in <see cref="testParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpe_tm([NotNull] testParser.Ope_tmContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ope_direct</c>
	/// labeled alternative in <see cref="testParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpe_direct([NotNull] testParser.Ope_directContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ope_unknown</c>
	/// labeled alternative in <see cref="testParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpe_unknown([NotNull] testParser.Ope_unknownContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ope_literal</c>
	/// labeled alternative in <see cref="testParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpe_literal([NotNull] testParser.Ope_literalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="testParser.device"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDevice([NotNull] testParser.DeviceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dv_real</c>
	/// labeled alternative in <see cref="testParser.direct_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDv_real([NotNull] testParser.Dv_realContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dv_dec</c>
	/// labeled alternative in <see cref="testParser.direct_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDv_dec([NotNull] testParser.Dv_decContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dev_exp</c>
	/// labeled alternative in <see cref="testParser.direct_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDev_exp([NotNull] testParser.Dev_expContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="testParser.local"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocal([NotNull] testParser.LocalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="testParser.tm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTm([NotNull] testParser.TmContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="testParser.indirect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndirect([NotNull] testParser.IndirectContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="testParser.index_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndex_ref([NotNull] testParser.Index_refContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="testParser.comment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComment([NotNull] testParser.CommentContext context);
}
